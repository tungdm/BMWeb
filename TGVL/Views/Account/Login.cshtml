@using TGVL.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    //Layout = "~/Views/Shared/_LoginViewLayout.cshtml";
}
@Styles.Render("~/Content/loginformcss")
<style>
    body {
        /*background: url('../../Images/login.jpg') !important;*/
        /*background-repeat: no-repeat;
        background-size: cover;*/
        /*background-position: center center;*/
    }

    #login {
        border-radius: 15px;
        background: #E8E8E8;
        padding: 15px;
    }
</style>
@*<body style="background:#F7F7F7;">*@
@*<div class="">*@
@*<a class="hiddenanchor" id="toregister"></a>
    <a class="hiddenanchor" id="tologin"></a>*@
<div id="wrapper">
    <div id="login" class="animate form login_form" style="margin-top: 50px;">
        <section class="login_content">

            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl, RegOrLog = "Đăng nhập" })

            <!--Login form-->
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "logintForm" }))
            {
                <h1 style="color:black"><strong>ĐĂNG NHẬP</strong></h1>

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Mật khẩu" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                @*<div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe, new { placeholder="Ghi nhớ" })
                            @Html.LabelFor(m => m.RememberMe)
                    </div>*@
                
                    <div>
                        <input type="submit" value="ĐĂNG NHẬP" class="btn btn-warning" style="font-size: 20px; margin: 10px 15px 10px 0 ;float: none" />
                        @Html.ActionLink("Quên mật khẩu", "ForgotPassword", null, new { @class = "reset_pass", @style = "font-size:14px" })
                    </div>

                    <div class="clearfix"></div>
                    <div class="separator">
                        <h5 class="change_link" style="margin-top:20px">
                            Bạn chưa có tài khoản? 
                            <strong>
                                @Html.ActionLink("Đăng ký ngay", "Register", new { type = "Customer" }, new { @class = "to_register", @style="font-size:14px" })
                            </strong>
                        </h5>

                        <div class="clearfix"></div>
                    </div>


            }
            <!--/Login form-->

        </section>
    </div>


    @*<div class="row">
            <div class="col-md-8">
                <section id="loginForm">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <h4>Use a local account to log in.</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                            <div class="col-md-10">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.RememberMe)
                                    @Html.LabelFor(m => m.RememberMe)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Log in" class="btn btn-default" />
                            </div>
                        </div>
                        <p>
                            @Html.ActionLink("Register as a new user", "Register")
                        </p>
                        //Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>
                    }
                </section>
            </div>
            <div class="col-md-4">
                <section id="socialLoginForm">
                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                </section>
            </div>
        </div>*@
</div>
@*</div>*@
@*</body>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}