@model TGVL.Models.MultiAddressShop
<style>

#map_canvas {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}
#map_canvas {
    position: relative;
}
</style>
<div id="map_canvas" class="mapping" style="width: 100%;height:100%;"></div>



<script>
    $(document).ready(function () {
        $("#maps").on("shown.bs.modal", function () {
            console.log("create");
            myMap();
            console.log("resize:" + map);
            google.maps.event.trigger(map, "resize");
        });
        
    });
    var map;
    function myMap() {
        console.log("Hello");
        //var map;
        var bounds = new google.maps.LatLngBounds();
        var mapOptions = {
            mapTypeId: 'roadmap'
        };

        map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
        map.setTilt(45);

        var markers = [@Html.Raw(string.Join(", ", @Model.Result))];
        var infoWindowContent = [@Html.Raw(string.Join(", ", @Model.InfoWindowContent))];

        var infoWindow = new google.maps.InfoWindow(), marker, i;

        for (i = 0; i < markers.length; i++) {
            var position = new google.maps.LatLng(markers[i][1], markers[i][2]);
            bounds.extend(position);
            marker = new google.maps.Marker({
                position: position,
                map: map,
                title: markers[i][0]
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    infoWindow.setContent(infoWindowContent[i][0]);
                    infoWindow.open(map, marker);
                }
            })(marker, i));

            map.fitBounds(bounds);
        }
        // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
        var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function (event) {
            this.setZoom(12);
            google.maps.event.removeListener(boundsListener);
        });
        
    };

    google.maps.event.addDomListener(window, "load", myMap);

    google.maps.event.addDomListener(window, "resize", resizingMap());

    

    function resizeMap() {
        if (typeof map == "undefined") return;
        setTimeout(function () { resizingMap(); }, 400);
    }
    
    function resizingMap() {
        if (typeof map == "undefined") return;
        var center = map.getCenter();
        google.maps.event.trigger(map, "resize");
        map.setCenter(center);
    }


</script>

