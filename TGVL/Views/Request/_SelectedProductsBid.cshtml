@model TGVL.Models.CreateRequestViewModel
@if (Model.RequestProducts != null)
{
    <div class="table-responsive">
        <table id="shopping-cart-table" class="data-table cart-table">
            <thead>
                <tr>
                    <th>STT</th>
                    <th>
                        Sản phẩm
                    </th>

                    <th>
                        Hình ảnh
                    </th>

                    <th>
                        Nhà sản xuất
                    </th>

                    <th>
                        Giá
                    </th>

                    <th>Đơn vị tính</th>

                    <th>
                        Số lượng
                    </th>


                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int count = 0;
                }


                @for (int i = 0; i < Model.RequestProducts.Count(); i++)
                {
                    count++;
                    <tr>
                        <td>
                            @count
                            @Html.HiddenFor(model => Model.RequestProducts[i].RequestedProduct.Id)
                        </td>

                        <td>@Html.DisplayFor(model => Model.RequestProducts[i].RequestedProduct.Name)</td>
                        <td><img src="~/Images/Product/SysProduct/@Model.RequestProducts[i].RequestedProduct.Image" style="max-height:100px; max-width:100px" /></td>
                        <td>@Html.DisplayFor(model => Model.RequestProducts[i].RequestedProduct.ManufactureName)</td>
                        <td class="price">
                            @Html.DisplayFor(model => Model.RequestProducts[i].RequestedProduct.UnitPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(model => Model.RequestProducts[i].RequestedProduct.Type)
                        </td>
                        <td>
                            @{
                                var productSessionKey = "product" + @Model.RequestProducts[i].RequestedProduct.Id;
                            }

                            @Html.EditorFor(model => Model.RequestProducts[i].Quantity, new { htmlAttributes = new { @class = @Model.RequestProducts[i].RequestedProduct.Id + " qty form-control", @Value = Session[productSessionKey] == null ? 1 : Session[productSessionKey] } })
                            @Html.ValidationMessageFor(model => Model.RequestProducts[i].Quantity, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            <input type="checkbox"
                                   name="selectedProduct"
                                   value="@Model.RequestProducts[i].RequestedProduct.Id"
                                   checked="checked"
                                   style="display:none"
                                   />

                            <a href="javascript:;" name="delete" id="@Model.RequestProducts[i].RequestedProduct.Id"  title="Xóa sản phẩm" class="button remove-item"><span><span>Xóa</span></span></a>
                        </td>
                    </tr>
                }



            </tbody>

        </table>

    </div>
    <div class="col-md-offset-2 col-md-10" id="productList"></div>
}


<script>
    $(document).ready(function () {
        $('.qty').on('input', function () {
            update_amounts();
        });


        $("a[name='delete']").click(function () {
            var rowIndex = $(this).closest('tr').prop('rowIndex');
            $('.removable tr').filter(function () {
                return this.rowIndex === rowIndex;
            }).remove();

            var rowCount = $('.removable > tbody > tr').length;
            if (rowCount == 0) {
                $('#productList').empty();
                $('#mydiv').hide();
            }
            update_amounts();
            //$(this).closest('tr').remove();

        });

        //$("#form0").validate();

        if ($('#Flag').val() == "bid") {
            $('.qty').each(function () {
                $(this).rules("add", {
                    required: true,
                    range: [1, Infinity],
                    messages: {
                        required: "Số lượng không được để trống",
                        range: "Số lượng lớn hơn 0"
                    }
                });
            });
        } else {
            $('.qty').each(function () {
                $(this).rules("add", {
                    required: true,
                    range: [1, Infinity],
                    messages: {
                        required: "Số lượng không được để trống",
                        range: "Số lượng phải lớn hơn 0"
                    }
                });
            });
        }

        $('input[type="number"]').bind('keypress', function (e) {
            if (e.keyCode == '9' || e.keyCode == '16') {
                return;
            }
            var code;
            if (e.keyCode) code = e.keyCode;
            else if (e.which) code = e.which;
            if (e.which == 46)
                return false;
            if (code == 8 || code == 46)
                return true;
            if (code < 48 || code > 57)
                return false;
        });

        $(".qty").bind('keyup mouseup', function () {
            var myClass = $(this).attr("class").split(" ")[0];
            //alert(myClass);

            var test = "." + myClass;
            $(test).on('keyup mouseup', function () {
                $(test).val($(this).val());
            });
        });
    });

    function update_amounts() {
        var sum = 0.0;
        var min = $('#min').text();  //set config 
      
        $('#my-orders-table > tbody  > tr').each(function () {
            var qty = $(this).find('.qty').val();
            
            var price = $(this).find('.price').text();
           
            var price2 = Number(price.replace(/[^0-9]+/g, ""));

            console.log("qty:" + qty + ", price:" + price + ", price2:" + price2);

            var amount = (qty * price2)
            sum += amount;
        });
        console.log(sum);
        if (min != 0) {
            if (sum >= min) {
                $('#errorTotal').empty();
            } else {
                var message = "Total > " + addDot(min) + " &#x20AB;)";
                var message = "Giá thầu phải lớn hơn " + addDot(min) + " &#x20AB; (Giá hiện tại: " + addDot(sum) + " &#x20AB;)"
                $('#errorTotal').html(message);
            }
        }

        $('#total').val(sum);
    }
</script>