@model TGVL.Models.CreateRequestViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_HomePageViewLayout.cshtml";
}

@*@Styles.Render("~/Content/textareascss")*@
@Styles.Render("~/Content/searchproductcss")

<style>
    #border_layout {
        float: left;
        text-align: left;
        width: 100%;
        background: #FFFFFF;
        border: 1px solid #e5e5e5;
    }

    #dep {
        background: #eaeaea;
        border-bottom: 1px solid #e5e5e5;
        font-family: 'Roboto';
        padding: 6px 5px 6px 5px;
    }
</style>

<section class="main-container">
    <div class="main container">
        <fieldset>
            @using (Ajax.BeginForm(
                    new AjaxOptions
                    {
                        HttpMethod = "POST",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "",
                        OnSuccess = "checkValidate(data, status, xhr)"
                    }
                ))
                {
            @*@using (Html.BeginForm())
        {*@
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Flag)

                    <div class="popular-posts widget widget__sidebar" id="recent-posts-4">
                        <div>
                            <h2 class="widget-title"><strong>SẢN PHẨM YÊU CẦU</strong></h2>
                            <br />

                            <div id="mydiv" class="form-group" style="display:none">
                                <div style="visibility: hidden">
                                    <input name="sum" id="total" value="0" />
                                    <div id="min"></div>
                                </div>
                                <div class="col-md-offset-1 col-md-10" id="productList"></div>
                                <div style="text-align:center" tabindex="1" class="text-danger col-md-offset-1 col-md-10" id="errorTotal"></div>
                            </div>
                            <div class="form-group">
                                
                                <div style="text-align:center">
                                    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#searchProduct">Thêm sản phẩm</button>
                                </div>
                            </div>

                        </div>
                        <h3 class="widget-title"><strong>YÊU CẦU</strong></h3>
                        <div class="widget-content">
                            <div class="form-group">

                                @*@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Tiêu đề<span style="color:#ff0000"> *</span></label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.TypeOfHouse, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Loại nhà<span style="color:#ff0000"> *</span></label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownListFor(
                                        model => model.TypeOfHouse,
                                        new SelectList(Model.AllTypeOfHouses, "Id", "Type"),
                                        "-----[Chọn loại nhà]-----",
                                        htmlAttributes: new { @class = "form-control" }
                                    )
                                    @Html.ValidationMessageFor(model => model.TypeOfHouse, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Địa chỉ nhận hàng<span style="color:#ff0000"> *</span></label>
                                <div class="col-md-6 col-sm-6 col-xs-12" style="margin-top: 6px;">
                                    @Html.EditorFor(model => model.ReceivingAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ReceivingAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.ReceivingDate, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Ngày nhận hàng<span style="color:#ff0000"> *</span></label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.EditorFor(model => model.ReceivingDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ReceivingDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.TimeRange, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Thời hạn yêu cầu<span style="color:#ff0000"> *</span></label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.EditorFor(model => model.TimeRange, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TimeRange, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Hình thức thanh toán<span style="color:#ff0000"> *</span></label>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.DropDownListFor(
                                        model => model.PaymentType,
                                        new SelectList(Model.AllTypeOfPayments, "Id", "Type"),
                                        "-----[Chọn hình thức thanh toán]-----",
                                        htmlAttributes: new { @class = "form-control" }
                                    )
                                    @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Miêu tả chi tiết</label>
                                <div class="col-md-6">
                                    @*@Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", style = "max-width:80%" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })*@

                                    <div id="alerts"></div>
                                    <div class="btn-toolbar" data-role="editor-toolbar" data-target="#editor">
                                        <div class="btn-group">
                                            <a class="btn dropdown-toggle" data-toggle="dropdown" title="Font"><i class="fa fa-font"></i><b class="caret"></b></a>
                                            <ul class="dropdown-menu"></ul>
                                        </div>
                                        <div class="btn-group">
                                            <a class="btn dropdown-toggle" data-toggle="dropdown" title="Font Size"><i class="fa fa-text-height"></i>&nbsp;<b class="caret"></b></a>
                                            <ul class="dropdown-menu">
                                                <li><a data-edit="fontSize 5"><font size="5">Huge</font></a></li>
                                                <li><a data-edit="fontSize 3"><font size="3">Normal</font></a></li>
                                                <li><a data-edit="fontSize 1"><font size="1">Small</font></a></li>
                                            </ul>
                                        </div>
                                        <div class="btn-group">
                                            <a class="btn" data-edit="bold" title="Bold (Ctrl/Cmd+B)"><i class="fa fa-bold"></i></a>
                                            <a class="btn" data-edit="italic" title="Italic (Ctrl/Cmd+I)"><i class="fa fa-italic"></i></a>
                                            <a class="btn" data-edit="strikethrough" title="Strikethrough"><i class="fa fa-strikethrough"></i></a>
                                            <a class="btn" data-edit="underline" title="Underline (Ctrl/Cmd+U)"><i class="fa fa-underline"></i></a>
                                        </div>
                                        <div class="btn-group">
                                            <a class="btn" data-edit="insertunorderedlist" title="Bullet list"><i class="fa fa-list-ul"></i></a>
                                            <a class="btn" data-edit="insertorderedlist" title="Number list"><i class="fa fa-list-ol"></i></a>
                                            <a class="btn" data-edit="indent" title="Indent (Tab)"><i class="fa fa-indent"></i></a>
                                        </div>
                                        <div class="btn-group">
                                            <a class="btn" data-edit="justifyleft" title="Align Left (Ctrl/Cmd+L)"><i class="fa fa-align-left"></i></a>
                                            <a class="btn" data-edit="justifycenter" title="Center (Ctrl/Cmd+E)"><i class="fa fa-align-center"></i></a>
                                            <a class="btn" data-edit="justifyright" title="Align Right (Ctrl/Cmd+R)"><i class="fa fa-align-right"></i></a>
                                            <a class="btn" data-edit="justifyfull" title="Justify (Ctrl/Cmd+J)"><i class="fa fa-align-justify"></i></a>
                                        </div>
                                        <div class="btn-group">
                                            <a class="btn dropdown-toggle" data-toggle="dropdown" title="Hyperlink"><i class="fa fa-link"></i></a>
                                            <div class="dropdown-menu input-append">
                                                <input class="span2" placeholder="URL" type="text" data-edit="createLink" />
                                                <button class="btn" type="button">Add</button>
                                            </div>
                                            <a class="btn" data-edit="unlink" title="Remove Hyperlink"><i class="fa fa-cut"></i></a>

                                        </div>

                                        <div class="btn-group">
                                            <a class="btn" title="Insert picture (or just drag & drop)" id="pictureBtn"><i class="fa fa-picture-o"></i></a>
                                            <input type="file" data-role="magic-overlay" data-target="#pictureBtn" data-edit="insertImage" />
                                        </div>
                                        <div class="btn-group">
                                            <a class="btn" data-edit="undo" title="Undo (Ctrl/Cmd+Z)"><i class="fa fa-undo"></i></a>
                                            <a class="btn" data-edit="redo" title="Redo (Ctrl/Cmd+Y)"><i class="fa fa-repeat"></i></a>
                                        </div>
                                        <input type="text" data-edit="inserttext" id="voiceBtn" x-webkit-speech="">
                                    </div>

                                    <div id="editor">

                                    </div>
                                    <br />
                                    <p style="color:#ff0000"><strong>* Thông tin bắt buộc</strong></p>

                                    @Html.HiddenFor(model => model.Description)


                                </div>
                            </div>
                        </div>
                        <br />

                        <div>
                            <h2 class="widget-title"><strong>THÔNG TIN LIÊN HỆ</strong></h2>
                            <br />
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Tên người đăng</label>
                                <div class="col-md-6 col-sm-6 col-xs-12" style="margin-top: 6px;">
                                    @Html.DisplayFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                                    @*@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })*@
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Email</label>
                                <div class="col-md-6 col-sm-6 col-xs-12" style="margin-top: 6px;">
                                    @Html.DisplayFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @*@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })*@
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Điện thoại</label>
                                <div class="col-md-6 col-sm-6 col-xs-12" style="margin-top: 6px;">
                                    @Html.DisplayFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })*@
                                <label class="control-label col-md-3 col-sm-3 col-xs-12">Địa chỉ</label>
                                <div class="col-md-6 col-sm-6 col-xs-12" style="margin-top: 6px;">
                                    @Html.DisplayFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                <div style="text-align:center">
                                    @*<p><button class="btn btn-success sweet-3" onclick="_gaq.push(['_trackEvent', 'example', 'try', 'sweet-3']);">Hoàn tất</button></p>*@
                                    <p><button class="btn btn-success" type="submit">Hoàn tất</button></p>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

        }

        </fieldset>
    </div>
</section>

<div id="modalProduct"></div>


<div id="searchProduct" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Thêm sản phẩm</h4>
            </div>
            <div class="modal-body" style="min-height:calc(100vh - 210px);max-height: calc(100vh - 210px);overflow-y: auto;">
                <div class="form-horizontal">
                    @*Tìm kiếm sản phẩm*@
                    @using (Ajax.BeginForm(
                    new AjaxOptions
                    {
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "listProduct",
                        OnSuccess = "$('#select').show()"
                    }
                ))
                {
                        <p style="text-align:center">
                            @Html.TextBox("searchString", null, new { @class = "form-control text-box", style = "display:inline-block", placeholder = "Nhập vào đây để tìm kiếm" })
                            <input type="submit" value="Tìm kiếm" class="btn btn-primary" />
                        </p>

                        <div id="clone" style="display:none"></div>
                }

                </div>

                <div id="result">
                    @using (Ajax.BeginForm("SelectProduct", "Request",
                    new AjaxOptions
                    {
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "productList",
                        OnSuccess = "selectedSuccess"
                    }, new { @id = "formAjax" }
                ))
                {
                        <div id="listProduct"></div>
                }
                </div>


            </div>
            <div class="modal-footer">
                <input id="select" type="submit" value="Xác nhận" class="btn btn-warning" style="display:none" />

                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
            </div>
        </div>

    </div>
</div>



@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/bundles/textareasjquery")
    <script>
        $(document).ready(function () {

            $('input[type="number"]').bind('keypress', function (e) {
                if (e.keyCode == '9' || e.keyCode == '16') {
                    return;
                }
                var code;
                if (e.keyCode) code = e.keyCode;
                else if (e.which) code = e.which;
                if (e.which == 46)
                    return false;
                if (code == 8 || code == 46)
                    return true;
                if (code < 48 || code > 57)
                    return false;
            });
            

            $.validator.addMethod("daterange", function (value, element) {
                var receivingDate = $("#ReceivingDate").val();

                var now = moment().format('YYYY-MM-DD');
                
                console.log("now:" + now + ", receivingDate:" + receivingDate);
                if (now > receivingDate) {
                    console.log('Date is past');
                } else {
                    console.log('Date is future');
                }

                return receivingDate >= now;
                
                //return someDate >= today;
            }, "Ngày nhận hàng phải từ hôm nay về sau");

            $('input[name="ReceivingDate"]').rules("add", {
                daterange: true
            });
        });

    </script>
}
<script>
    //document.querySelector('.sweet-3').onclick = function () {
    //    swal("Thành công", "Yêu cầu mới đã được tạo", "success");
    //};
</script>